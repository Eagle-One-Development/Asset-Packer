<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeW9wAXlvcBF5b3GBeW908XlveDF5b3oheW
        960XlvetF5b3rReW960XlveiF5b3gxeW908XlvcZF5b3AReW9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeW9wAXlvcBF5b3JReW93MXlvebF5b3gheW
        91UXlvczF5b3HheW9xcXlvcXF5b3HheW9zMXlvdVF5b3gheW95sXlvd1F5b3JheW9wEXlvcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3DxeW92oXlveiF5b3YxeW
        9xsXlvcBF5b3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeW9wAXlvcBF5b3GxeW92MXlvehF5b3aheW
        9w8XlvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3ABeW9yMXlveUF5b3fReW
        9xoXlvcAF5b3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3ABeW
        9xoXlvd8F5b3lReW9yQXlvcAF5b3AAAAAAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW9wAXlvctF5b3oReW
        91YXlvcEF5b3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAF5b3ABeW9wQXlvdUF5b3oheW9y4XlvcAF5b3AAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3JBeW
        96EXlvdIF5b3ABeW9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW9wAXlvdGF5b3oReW9yQXlvcAAAAAAAAAAAAAAAAAF5b3ABeW
        9w4XlveUF5b3VReW9wAXlvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW9wAXlvdVF5b3lReW9w8XlvcAAAAAABeW
        9wAXlvcAF5b3ZxeW93wXlvcDF5b3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW9wMXlvd9F5b3axeW
        9wAXlvcAF5b3ABeW9yUXlvefF5b3GxeW9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW
        9xsXlvehF5b3JheW9wAXlvcAF5b3dBeW92MXlvcAF5b3ABaW9wAWlvcHF5b3MxeV9wgXlvcRF5b3LheV
        9gkXlvc0F5b3GxeW90kXlvc8F5b3KxeV9x0XlvcyF5b3MxeW90cXlvdBF5b3KxeW9yIXlvclF5b3LBf/
        9wAXlfcAF5b3ABeW92MXlvd1F5b3ABeW9xkXlvecF5b3HBeW9wAAAAAAFpb3ABaW9xgXlve2F5b2RxeW
        9ycXlve0F5b3mReW960XlveRF5b3jReW92IXlveRF5b3mxeW96oXlvd0F5b3uheW92MXlvd/F5b3nBeW
        96kXlvdEF5b3ABeV9wAXlvcAF5b3HBeW95sXlvcZF5b3TxeW94UXlvcAF5b3AAAAAAAWlvcAFpb3GBeW
        978XlvelF5b3eheW95EXlvfQF5b3gReW96YXlvc0HJL3ABeW94YXlvfvF5b3cBeW904XlvfIF5b3bBeW
        930XlvfEF5b3theW9yIXlvcAAAAAABeW9wAXlvcAF5b3gheW908XlveDF5b3VxeW9wAAAAAAAAAAABaW
        9wAWlvcXF5b3tReW96YXlvd/F5b3UBeW99YXlvc0F5b3cxeW95QXlvdtF5b3jxeW95MXlveaF5b3bBeW
        98MXlvd8F5b3fxeW97IXlveyF5b3MBeW9wAAAAAAAAAAABeW9wAXlvdWF5b3gxeW96EXlvczF5b3AAAA
        AAAAAAAAF5b3ABeW9wYXlvcwF5b3NBeV9g4XlvcMF5b3LheW9wYXlvcKF5b3NxeW9y4XlvciF5b3GBeW
        9ykXlvcpF5b3OheW9zYXlvcjF5b3OReW9ycXlfcDF5X3AAAAAAAAAAAAF5b3ABeW9zMXlvehF5b3rReW
        9x4XlvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3HheW
        964XlvetF5b3FxeW9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeW
        9wAXlvcXF5b3rReW960XlvcXF5b3AAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3EBeW90QXlvcYF5b3ABaV
        9gAWlfYIF5b3PhaV9hUWlfYAAAAAAAAAAAAXlvcAF5b3HBeW9zgYlfYEF5X2ABaV9gEXlvcxF5b3PReW
        9wUXlvcAF5b3ABeW9xcXlvetF5b3rReW9x4XlvcAAAAAAAAAAAAAAAAAF5L1ABeW9wAXlvdYF5b3+BeW
        93oYlvcAFpX2ABaV9h0XlvfVFpX2SBaV9gAAAAAAAAAAABeW9wAXlvdhF5b3vxiV9g0XlvcAF5b3OBeW
        99cXlvd4F5b4AheW+AAXlvcAF5b3HheW964XlvehF5b3MxeW9wAAAAAAAAAAAAAAAAAXlvYAF5X2BBeW
        96IXlvfgF5b3uxeW9g8WlfYAFpX2HReW99kWlfZJFpX2AAAAAAAAAAAAF5b3ABeW92MXlvfDGJX2DBeW
        9x0XlvfEF5b3pBeW9w0XlvcAAAAAABeW9wAXlvczF5b3oReW94MXlvdXF5b3AAAAAAAAAAAAAAAAABeW
        9wAXlvckF5b30xeW920XlvfLF5b3PxeW9wAWlfYdF5b32heW92EXlfYaFpX2DRWW+AAXlvcAF5b3YxeW
        98IXlfcZF5b3oheW98QXlfceF5X3AAAAAAAAAAAAF5b3ABeW91YXlveDF5b3TxeW94UXlvcAF5b3AAAA
        AAAVlfcAF5b3ABeW92QXlvfLF5b3GBeW96IXlveHF5b3ABaV9h0XlvfeF5b31heW98IXlve5F5b3WSKY
        /QAXlvdhF5b33xeW96AXlvfWF5b3OBeW9wAWlfYAAAAAABeW9wAXlvcAF5b3gheW908XlvcZF5b3nBeW
        9xwXlvcAAAAAABaV9wAWlfcGF5b3rheW948XlvcAF5b3WxeW98QXlvcQFpX2HBeW99oXlvdgF5b2IReW
        92cXlvfXF5b3PheW914XlvftF5b37ReW94Ict/8AF5T2AAAAAAAAAAAAF5b3ABeW9xwXlvebF5b3GReW
        9wAXlvdzF5b3ZBeW9wAXlvcAF5b3ABeW9ykXlvfZF5b3SBeW9wAXlvcgF5b3zxeW90QWlfYaF5b32RaV
        9kkXlvYAF5b2BheW97QXlvd/F5b3YBeW98cXlvdqF5b3wxeW9zoXlvcAFpX4ABeW9wAXlvcAF5b3ZBeW
        93QXlvcAF5b3ABeW9yQXlvefF5b3GxeW9wAXlvcAF5b3axeW98oXlvcUF5b3ABeV8wIXlvegF5b3jBaV
        9hwXlvfZFpX2SReW9wAWlvYXF5b3xReW93IXlvdfF5b3xheV9hEXlvdtF5b3xheW9zEXlvcAF5b3ABeW
        9xwXlveiF5b3JheW9wAXlvcAF5b3ABeW92cXlvd9F5b3AxaX+AgXlve1F5b3jBeW+QAXlvYAF5b3ABeW
        91gXlvfJF5X2NReW99wXlvesF5b3ixeW97wXlvfAF5X2IReW92EXlvfFF5X2DheW+AUXlvd/F5b3wheW
        9ysXlvcCF5b3fheW92oXlvcAF5b3AAAAAAAXlvcAF5b3DheW95MXlvdWF5b3DReW92wXlvctF5b3AAAA
        AAAXlvcAF5b3FheW92wWlfcqF5b3bheW94AXlvd6F5b3XheW9xwXlvcAF5b3MheW92IXlvYHF5b3ABeW
        9wsXlvdlF5b3RheW91YXlveUF5b3DxeW9wAAAAAAAAAAAAAAAAAXlvcAF5b3IheW96AXlvdJF5b3ABeW
        9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAF5b3ABeW9wAXlvdGF5b3oReW9yMXlvcAAAAAAAAAAAAAAAAAAAAAABeW9wAXlvcAF5b3KheW
        96AXlvdWF5b3BBeW9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABeW9wAXlvcEF5b3VReW96EXlvcsF5b3ABeW9wAAAAAAAAAAAAAAAAAAAAAAAAAAABeW
        9wAXlvcAF5b3IheW95MXlvd8F5b3GheW9wAXlvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABeW9wAXlvcAF5b3GheW93wXlveUF5b3IxeW9wAXlvcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAXlvcAF5b3DheW92cXlvegF5b3YxeW9xsXlvcCF5b3AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABeW9wAXlvcCF5b3GxeW92IXlvefF5b3ZxeW9w4XlvcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlvcAF5b3AReW9yMXlvdzF5b3mxeW94UXlvdXF5b3MxeW
        9x4XlvcXF5b3FxeW9x4XlvczF5b3VxeW94UXlvecF5b3dBeW9yQXlvcBF5b3AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5b3ABeW9wEXlvcYF5b3TxeW
        94QXlveiF5b3rReW960XlvetF5b3rReW96IXlveDF5b3TxeW9xkXlvcBF5b3AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8D/A/+H/+H/D//w/j///Hx///48f//+OP///xnAAAORwA
        ADg8AQA8PAAAPDwAADw////8P////D8Y8Qw/GPEMPgjwHD4IMDw+CBB8HEAA+JxAgHmMQIAxwOAAA8Dg
        EQPj///H8P//D/h//h/8D/A//gAAf/+AAf8=
</value>
  </data>
</root>